{"version":3,"file":"google.js","sourceRoot":"","sources":["../../../../../lib/utils/llm/structures/google.ts"],"names":[],"mappings":";;;AAAA,yDAA0D;AAC1D,qCAA6D;AAEhD,QAAA,kBAAkB,GAAW;IACtC,IAAI,EAAE,0BAAU,CAAC,MAAM;IACvB,UAAU,EAAE;QACR,MAAM,EAAE;YACJ,IAAI,EAAE,0BAAU,CAAC,MAAM;YACvB,WAAW,EACP,gFAAgF;YACpF,QAAQ,EAAE,KAAK;SAClB;QACD,WAAW,EAAE;YACT,IAAI,EAAE,0BAAU,CAAC,MAAM;YACvB,WAAW,EAAE,iCAAiC;YAC9C,QAAQ,EAAE,KAAK;SAClB;QACD,SAAS,EAAE;YACP,IAAI,EAAE,0BAAU,CAAC,KAAK;YACtB,WAAW,EAAE,yDAAyD;YACtE,KAAK,EAAE;gBACH,IAAI,EAAE,0BAAU,CAAC,MAAM;gBACvB,WAAW,EAAE,oBAAoB;gBACjC,QAAQ,EAAE,KAAK;aAClB;SACJ;QACD,QAAQ,EAAE;YACN,IAAI,EAAE,0BAAU,CAAC,KAAK;YACtB,WAAW,EACP,6EAA6E;YACjF,KAAK,EAAE;gBACH,IAAI,EAAE,0BAAU,CAAC,MAAM;gBACvB,WAAW,EAAE,wCAAwC;gBACrD,QAAQ,EAAE,KAAK;aAClB;SACJ;QACD,UAAU,EAAE;YACR,IAAI,EAAE,0BAAU,CAAC,KAAK;YACtB,WAAW,EAAE,+CAA+C;YAC5D,KAAK,EAAE;gBACH,IAAI,EAAE,0BAAU,CAAC,MAAM;gBACvB,WAAW,EAAE,qBAAqB;gBAClC,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,CAAC,GAAG,+BAAsB,CAAC;aACpC;SACJ;QACD,GAAG,EAAE;YACD,IAAI,EAAE,0BAAU,CAAC,MAAM;YACvB,WAAW,EACP,uFAAuF;YAC3F,QAAQ,EAAE,KAAK;SAClB;KACJ;IACD,QAAQ,EAAE,CAAC,QAAQ,EAAE,aAAa,CAAC;CACtC,CAAA;AAEY,QAAA,oBAAoB,GAAW;IACxC,IAAI,EAAE,0BAAU,CAAC,MAAM;IACvB,UAAU,EAAE;QACR,IAAI,EAAE;YACF,IAAI,EAAE,0BAAU,CAAC,MAAM;YACvB,WAAW,EAAE,sBAAsB;YACnC,QAAQ,EAAE,KAAK;SAClB;QACD,IAAI,EAAE;YACF,IAAI,EAAE,0BAAU,CAAC,MAAM;YACvB,WAAW,EAAE,4BAA4B;YACzC,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,CAAC,GAAG,mBAAU,CAAC;SACxB;QACD,OAAO,EAAE;YACL,WAAW,EAAE,kCAAkC;YAC/C,IAAI,EAAE,0BAAU,CAAC,KAAK;YACtB,KAAK,EAAE,0BAAkB;SAC5B;KACJ;IACD,QAAQ,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;CACxC,CAAA;AAEY,QAAA,sBAAsB,GAAG;IAClC,WAAW,EAAE,oBAAoB;IACjC,IAAI,EAAE,0BAAU,CAAC,KAAK;IACtB,KAAK,EAAE,4BAAoB;CAC9B,CAAA","sourcesContent":["import { Schema, SchemaType } from '@google/generative-ai'\nimport { ACTION_OPERATION_TYPES, RISK_TYPES } from './common'\n\nexport const ActionGoogleSchema: Schema = {\n    type: SchemaType.OBJECT,\n    properties: {\n        tokens: {\n            type: SchemaType.STRING,\n            description:\n                'Comma-separated list of symbols of the involved tokens, for example: USDC, ETH',\n            nullable: false\n        },\n        description: {\n            type: SchemaType.STRING,\n            description: 'Free text describing the action',\n            nullable: false\n        },\n        platforms: {\n            type: SchemaType.ARRAY,\n            description: 'The DeFi platform(s) which is to be used for the action',\n            items: {\n                type: SchemaType.STRING,\n                description: 'DeFi platform name',\n                nullable: false\n            }\n        },\n        networks: {\n            type: SchemaType.ARRAY,\n            description:\n                'The name of the blockchain network(s) which the action is to be executed on',\n            items: {\n                type: SchemaType.STRING,\n                description: 'Lower-cased name of blockchain network',\n                nullable: false\n            }\n        },\n        operations: {\n            type: SchemaType.ARRAY,\n            description: 'The DeFi operation type(s) used of the action',\n            items: {\n                type: SchemaType.STRING,\n                description: 'DeFi operation type',\n                nullable: false,\n                enum: [...ACTION_OPERATION_TYPES]\n            }\n        },\n        apy: {\n            type: SchemaType.STRING,\n            description:\n                'The annual yield that can be expected from this action. Example values: 3%, 5%, 8-10%',\n            nullable: false\n        }\n    },\n    required: ['tokens', 'description']\n}\n\nexport const StrategyGoogleSchema: Schema = {\n    type: SchemaType.OBJECT,\n    properties: {\n        name: {\n            type: SchemaType.STRING,\n            description: 'Name of the strategy',\n            nullable: false\n        },\n        risk: {\n            type: SchemaType.STRING,\n            description: 'Risk level of the strategy',\n            nullable: false,\n            enum: [...RISK_TYPES]\n        },\n        actions: {\n            description: 'List of actions for the strategy',\n            type: SchemaType.ARRAY,\n            items: ActionGoogleSchema\n        }\n    },\n    required: ['name', 'risk', 'actions']\n}\n\nexport const StrategiesGoogleSchema = {\n    description: 'List of strategies',\n    type: SchemaType.ARRAY,\n    items: StrategyGoogleSchema\n}\n"]}